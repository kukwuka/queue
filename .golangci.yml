issues:
  exclude-dirs:
    - vendor
    - mocks
  exclude-rules:
    - path: _test.go
      linters:
        - gochecknoglobals
        - err113
        - funlen
        - wrapcheck
        - nolintlint
        - dupl
        - perfsprint
        - forcetypeassert
    - source: "^//go:generate "
      linters:
        - lll
    - source: "envDefault:"
      linters:
        - lll
    - path: internal/bootstrap/
      linters:
        - gochecknoglobals
        - ireturn
    - linters:
        - err113
      # Проверка отключена, потому что часто возникают случаи, когда не нужно создавать такую ошибку,
      # которую будут проверять через errors.Is. При этом остальные проверки полезные.
      text: "do not define dynamic errors"

linters:
  # Enable all available linters.
  enable-all: true

  # Disable the following linters.
  disable:
    # The linter 'execinquery' is deprecated (since v1.58.0) due to: The repository of the linter has been archived by the owner.
    - execinquery

    # The linter 'gomnd' is deprecated (since v1.58.0) due to: The linter has been renamed. Replaced by mnd.
    - gomnd

    # Reports ill-formed or insufficient nolint directives.
    # https://github.com/golangci/golangci-lint/tree/master/pkg/golinters/nolintlint
    - nolintlint

    # Tool for detection of FIXME, TODO and other comment keywords
    # https://github.com/matoous/godox
    - godox

    # Analyzer: checks whether err of sql.Rows is checked.
    # https://github.com/jingyugao/rowserrcheck.
    # Disabled because of generics.
    - rowserrcheck

    # Linter that confirms that DB rows and stats are closed properly.
    # https://github.com/ryanrolds/sqlclosecheck.
    # Disabled because of generics.
    - sqlclosecheck

    # Finds wasted assignment statements.
    # https://github.com/sanposhiho/wastedassign.
    # Disabled because of generics.
    - wastedassign

    # Checks for a new line before return and branch statements to increase code clarity.
    # https://github.com/ssgreg/nlreturn.
    # Методы и функции должны быть маленькими и компактными.
    # Если ваш кусок кода нуждается в разбиении на логические куски пустыми строками,
    # разбейте этот код на несколько более мелких понятных функций.
    # https://www.yegor256.com/2014/11/03/empty-line-code-smell.html.
    - nlreturn

    # WSL is a linter that enforces a very non-scientific vision of how to make code
    # more readable by enforcing empty lines at the right places.
    # https://github.com/bombsimon/wsl.
    # Методы и функции должны быть маленькими и компактными.
    # Если ваш кусок кода нуждается в разбиении на логические куски пустыми строками,
    # разбейте этот код на несколько более мелких понятных функций.
    # https://www.yegor256.com/2014/11/03/empty-line-code-smell.html.
    - wsl

    # Checks if all structure fields are initialized.
    # https://github.com/GaijinEntertainment/go-exhaustruct.
    # Довольно много случаев, когда пустые поля структур не являются обязательными.
    # Особенно полезно отключать в тестах для проверок гипотез.
    - exhaustruct

    # Checks the struct tags.
    # https://github.com/ldez/tagliatelle.
    # Львиная доля срабатываний приходится на описание json-тегов в структурах,
    # которые описываю внешние структуры данных.
    - tagliatelle

    # Check declaration order and count of types, constants, variables and functions.
    # https://gitlab.com/bosi/decorder.
    # Сочли неудобным.
    - decorder

    # Checks package imports are in a list of acceptable packages.
    # https://github.com/OpenPeeDeeP/depguard.
    # Пока не накопили базу знаний.
    - depguard

    # https://github.com/ghostiam/protogetter
    # Сочли неудобным.
    - protogetter

linters-settings:
  tagalign:
    align: true
    # Whether enable tags sort.
    # If true, the tags will be sorted by name in ascending order.
    # eg: `xml:"bar" json:"bar" validate:"required"` -> `json:"bar" validate:"required" xml:"bar"`
    # Default: true
    sort: true
    # Specify the order of tags, the other tags will be sorted by name.
    # This option will be ignored if `sort` is false.
    # Default: []
    order:
      - json
      - xml
    # Whether enable strict style.
    # In this style, the tags will be sorted and aligned in the dictionary order,
    # and the tags with the same name will be aligned together.
    # Note: This option will be ignored if 'align' or 'sort' is false.
    # Default: false
    strict: true

  cyclop:
    # The maximal code complexity to report.
    # Default: 10.
    max-complexity: 5
    # The maximal average package complexity.
    # If it's higher than 0.0 (float) the check is enabled.
    # Default: 0.0.
    package-average: 5
    # Should ignore tests.
    # Default: false.
    skip-tests: false

  dupl:
    # Tokens count to trigger issue.
    # Default: 150.
    threshold: 100

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60.
    lines: 40
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40.
    statements: 20

  gci:
    # Checks that no prefix Comments (comment lines above an import) are present.
    # Default: false.
    no-prefix-comments: true
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # Default: ["standard", "default"]
    sections:
      # Captures all standard packages if they do not match another section.
      - standard
      # Contains all imports that could not be matched to another section type.
      - default
      # Groups all local packages.
      - localmodule

  gocognit:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20).
    min-complexity: 10

  gocyclo:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20).
    min-complexity: 10

  interfacebloat:
    # The maximum number of methods allowed for an interface.
    # Default: 10.
    max: 5

  lll:
    # Max line length, lines longer will be reported.
    # Default: 120.
    line-length: 120
    # Tab width in spaces.
    # Default: 1.
    tab-width: 1

  maintidx:
    # Show functions with maintainability index lower than N.
    # A high index indicates better maintainability (it's kind of the opposite of complexity).
    # Default: 20.
    under: 40

  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns.
    # Default: 30.
    max-func-lines: 10

  nolintlint:
    # Disable to ensure that all nolint directives actually have an effect.
    # Default: false.
    allow-unused: false
    # Exclude following linters from requiring an explanation.
    # Default: [].
    allow-no-explanation: []
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false.
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false.
    require-specific: true

  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: all
    # Check that each sentence ends with a period.
    # Default: true
    period: true
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: true

  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5.
    max-distance: 5
    # The minimum length of a variable's name that is considered "long".
    # Variable names that are at least this long will be ignored.
    # Default: 3.
    min-name-length: 2
    # Check method receivers.
    # Default: false.
    check-receiver: true
    # Check named return values.
    # Default: false.
    check-return: true
    # Check type parameters.
    # Default: false.
    check-type-param: true
    # Ignore "ok" variables that hold the bool return value of a type assertion.
    # Default: false.
    ignore-type-assert-ok: false
    # Ignore "ok" variables that hold the bool return value of a map index.
    # Default: false.
    ignore-map-index-ok: false
    # Ignore "ok" variables that hold the bool return value of a channel receive.
    # Default: false.
    ignore-chan-recv-ok: false
    # Optional list of variable names that should be ignored completely.
    # Default: [].
    ignore-names: [
      i,
      r,
      w,
      s,
      c,
      T,
      V,
    ]
    # Optional list of variable declarations that should be ignored completely.
    # Default: [].
    ignore-decls: []
